"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[678],{1470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(6540),r=t(4164),o=t(3104),s=t(6347),i=t(205),l=t(7485),c=t(1682),d=t(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a})))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=h(e),[s,l]=(0,a.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[c,u]=m({queryString:t,groupId:r}),[g,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,d.Dv)(n);return[t,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),b=(()=>{const e=c??g;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var f=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function v({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const n=e.currentTarget,r=i.indexOf(n),o=s[r].value;o!==t&&(l(n),a(o))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:a})=>(0,x.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:d,onClick:c,...a,className:(0,r.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function _({lazy:e,children:n,selectedValue:t}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(_,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},5250:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"developer/general_concepts/api_structure","title":"API Structure","description":"Tangerine is developed in Python 3.9, it relies on a C++ core called meta_nodal for everything related to performance (OpenGL viewports, multithreading evaluation of rigs, etc).","source":"@site/docs/developer/general_concepts/api_structure.md","sourceDirName":"developer/general_concepts","slug":"/developer/general_concepts/api_structure","permalink":"/tangerine-docs/developer/general_concepts/api_structure","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Running scripts","permalink":"/tangerine-docs/developer/environment"},"next":{"title":"Document","permalink":"/tangerine-docs/developer/general_concepts/document"}}');var r=t(4848),o=t(8453);t(1470),t(9365);const s={sidebar_position:1},i="API Structure",l={},c=[{value:"The meta_nodal API",id:"the-meta_nodal-api",level:2},{value:"The Tangerine API",id:"the-tangerine-api",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"api-structure",children:"API Structure"})}),"\n",(0,r.jsxs)(n.p,{children:["Tangerine is developed in Python 3.9, it relies on a C++ core called ",(0,r.jsx)(n.strong,{children:"meta_nodal"})," for everything related to performance (OpenGL viewports, multithreading evaluation of rigs, etc).\nAll the GUI is handled by the ",(0,r.jsx)(n.a,{href:"https://doc.qt.io/archives/qtforpython-5/",children:"Qt for Python library"}),", also known as PySide2.\nYou may write your own tools with your custom graphic interfaces by using Qt just as we does."]}),"\n",(0,r.jsxs)(n.p,{children:["In practice, Tang\u2019s Python code imports the ",(0,r.jsx)(n.code,{children:"meta_nodal"})," module implemented in ",(0,r.jsx)(n.em,{children:'"meta_nodal.pyd"'}),".\nTherefore, there are two API layers:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"The meta_nodal API"})," handles all low-level operations, such as creating and managing the scene graph, modifying its data, and serializing it into ",(0,r.jsx)(n.code,{children:".tang"})," files."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"The Tangerine API"})," provides higher-level batch operations (on ",(0,r.jsx)(n.code,{children:".shot"})," files) and allows extension of the GUI with new tools (open/save dialogs, animation plugins, etc.)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["As an example, ",(0,r.jsx)(n.a,{href:"https://citrus-software.github.io/mikan-docs/",children:(0,r.jsx)(n.strong,{children:"Mikan"})}),", the open source rigging toolbox developed by our rigging team, clearly illustrates both aspects:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Asset build is a batch process that directly use the meta_nodal API."}),"\n",(0,r.jsx)(n.li,{children:"Interactive rigging tools (pose flip and mirror, IK/FK switches, etc.) are integrated into Tang\u2019s GUI through the Tangerine API."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"the-meta_nodal-api",children:"The meta_nodal API"}),"\n",(0,r.jsxs)(n.p,{children:["The meta_nodal API is mainly used when we want to access the rigging nodes, or math nodes and data, or any load/export of abc/usd files.\nAll the meta_nodal API is in one module - ",(0,r.jsx)(n.strong,{children:"meta_nodal_py"})," - and it holds the ",(0,r.jsx)(n.strong,{children:"Imath"})," submodule for all mathematical classes and functions.\nFor example, in the following script we load the modeling of JB the Capy, the asset we used in the previous page (see Hello Tangerine), by using the load_abc function from the meta_nodal API:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from meta_nodal_py import load_abc\nimport os\n\ncapy_model_path = os.getcwd() + "/demo/assets/capy_jb/capy_modeling.abc"  # meshes of JB the Capy\nparent_node = document.root()  # the parent node for the node hierarchy in the alembic file\nload_abc(parent_node, capy_model_path)  # load the alembic file of the Capy, it only contains meshes (no rig)\ndocument.rig_has_changed_without_modifiers()  # update internals (GUI, etc.)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can copy/paste this script in the Command Line window and press Enter, just like you did on the previous page.\nNote, by the way, that the ",(0,r.jsx)(n.code,{children:"document"})," variable is always predefined in the Command Line window (but it is not predefined in usual python script files where ",(0,r.jsx)(n.code,{children:"get_document()"})," should be used then)."]}),"\n",(0,r.jsx)(n.p,{children:"Here is another example of the meta_nodal API, using the Imath submodule, it doubles the scale of the imported 'geo' node from the previous script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from meta_nodal_py.Imath import V3f, M44f\n\nxform = M44f()  # create a 4x4 matrix\nxform.setScale(V3f(2.0))  # set its scale to 2.0 on all axis\nparent_node = document.root()  # get the parent node we used in load_abc (see above)\ngeo_node = parent_node.find('geo')  # find its child node named 'geo'\ngeo_node.transform.set_value(xform)  # set its transform to the matrix we made previously\ndocument.rig_has_changed_without_modifiers()  # update internals (GUI, etc.)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that we always need to call ",(0,r.jsx)(n.code,{children:"document.rig_has_changed_without_modifiers()"})," to update the internals of Tangerine, including the GUI, when we use the meta_nodal API and when no modifier is used.\nThe modifier concept will be explained in the next sections, it's part of the Tangerine API."]}),"\n",(0,r.jsx)(n.h2,{id:"the-tangerine-api",children:"The Tangerine API"}),"\n",(0,r.jsx)(n.p,{children:"In fact, we use the Tangerine API most of the time, it is divided itself into two main categories:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Submodules of the ",(0,r.jsx)(n.strong,{children:"tang_core"})," module, which handle data operations, particularly batch processes."]}),"\n",(0,r.jsxs)(n.li,{children:["Submodules of the ",(0,r.jsx)(n.strong,{children:"tang_gui"})," module, which handle GUI integration and scripting of existing widgets."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"On the previous page (see Hello Tangerine), we have seen how the script import python modules from both of them:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from tang_core.document.get_document import get_document\nfrom tang_core.anim import set_animated_plug_value\nfrom tang_core.callbacks import Callbacks\nfrom tang_gui.get_tang_window import get_tang_window\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As you can see in all the scripts we've seen so far, and for all APIs, the ",(0,r.jsx)(n.strong,{children:"Document"})," is always the entry point. It reflects the current state of Tangerine, it holds all the data of the current shot, as well as other edition states (selection, undo/redo, etc.).\n",(0,r.jsx)(n.strong,{children:"Nodes"})," and ",(0,r.jsx)(n.strong,{children:"Modifiers"})," are very important to understand too in order to navigate easily in both Tangerine and meta_nodal APIs."]}),"\n",(0,r.jsx)(n.p,{children:"The next section details all these concepts."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(6540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var o=t(4848);function s({children:e,hidden:n,className:t}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}}}]);